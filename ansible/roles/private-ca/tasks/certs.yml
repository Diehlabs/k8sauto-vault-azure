---
- name: CA and certificates
  hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3
    vault_nodes:
      vault01:
      vault02:
      vault03:

  tasks:
    ###########################################
    # CREATE SERVER CERTFICATES - Vault Nodes #
    ###########################################
    - name: Create private key for new certificate on EdgeRouter
      community.crypto.openssl_privatekey:
        path: "{{ ca_conf.certs_path.master }}/{{ vault_nodes[item].... }}"
      with_dict: "{{ vault_nodes }}"

    - name: Create certificate signing request (CSR) for Vault nodes
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{ ca_conf.certs_path.master }}/{{ item.key }}.key"
        common_name: "{{ item.key }}"
        subject_alt_name:
          - "DNS:{{ item.value['ip'] }}"
          - "DNS:{{ item.value['public_ip'] }}"
      register: "ca_csr_{{ item.key }}"
      with_dict: "{{ vault_nodes }}"

    - name: Check whether certificate exists
      stat:
        path: "{{ ca_conf.certs_path.master }}/vpn.diehlabs.com.pem"
      register: certificate_exists

    - name: Read existing certificate if exists
      slurp:
        src: "{{ ca_conf.certs_path.master }}/vpn.diehlabs.com.pem"
      when: certificate_exists.stat.exists
      register: certificate

    - name: Sign certificate with our CA
      community.crypto.x509_certificate_pipe:
        content: "{{ (certificate.content | b64decode) if certificate_exists.stat.exists else omit }}"
        csr_content: "{{ ca_csr.csr }}"
        provider: ownca
        ownca_path: "{{ ca_conf.certs_path.master }}/ca-certificate.pem"
        ownca_privatekey_path: "{{ ca_conf.certs_path.master }}/ca-certificate.key"
        ownca_privatekey_passphrase: "{{ ca_conf.secret_ca_passphrase }}"
        ownca_not_after: +365d  # valid for one year
        ownca_not_before: "-1d"  # valid since yesterday
      register: certificate

    - name: Write server certificate file on master
      copy:
        dest: "{{ ca_conf.certs_path.master }}/vpn.diehlabs.com.pem"
        content: "{{ certificate.certificate }}"
        remote_src: yes
        mode: 0644
      when: certificate is changed

    - name: Generate DH Parameters file
      community.crypto.openssl_dhparam:
        path: "{{ ca_conf.certs_path.master }}/dhparams.pem"
        size: 2048

######################################################
#       Distribute certificates to EdgeRouter        #
######################################################
- name: Configure EdgeRouter
  hosts: routy.diehlabs.lan
  vars:
    ansible_network_os: edgeos
    ansible_connection: ansible.netcommon.network_cli

  handlers:
    - name: Reboot Router
      community.network.edgeos_command:
        commands: reboot now

  tasks:
    # - name: Gather facts from the device
    #   become: no
    #   community.network.edgeos_facts:
    #     gather_subset: 'all'

    # - edgeos_command:
    #     commands:
    #       # - show date
    #       # - show interfaces
    #       - show hardware cpu
    #       # - show hardware mem
    #   register: output

    - name: Copy dh params file to EdgeRouter
      # delegate_to: naster.diehlabs.lan
      # run_once: True
      ansible.netcommon.net_put:
        dest: "{{ ca_conf.certs_path.er }}/dhparams.pem"
        src: "{{ ca_conf.certs_path.master }}/dhparams.pem"
        remote_src: yes
        mode: 0640

    - name: Copy server certificate file to EdgeRouter
      ansible.netcommon.net_put:
        dest: "{{ ca_conf.certs_path.er }}/server.pem"
        src: "{{ ca_conf.certs_path.master }}/vpn.diehlabs.com.pem"
        remote_src: yes
        mode: 0640

    - name: Copy server key file to EdgeRouter
      ansible.netcommon.net_put:
        dest: "{{ ca_conf.certs_path.er }}/server.key"
        src: "{{ ca_conf.certs_path.master }}/vpn.diehlabs.com.key"
        remote_src: yes
        mode: 0640

    - name: Copy CA certificate file to EdgeRouter
      ansible.netcommon.net_put:
        dest: "{{ ca_conf.certs_path.er }}/cacert.pem"
        src: "{{ ca_conf.certs_path.master }}/ca-certificate.pem"
        remote_src: yes
        mode: 0640

    - name: Copy client keys to EdgeRouter
      ansible.netcommon.net_put:
        dest: "{{ ca_conf.certs_path.er }}/{{ item }}.key"
        src: "{{ ca_conf.certs_path.clients}}/{{ item }}.key"
        remote_src: yes
        mode: 0640
      loop: "{{ ca_conf.ovpn_client_certs }}"
